
 line       object           ucode  source program

   1    (41  103    2)     main       proc 103 2 2
   2    (44    2    1)                sym 2 1 1
   3    (44    2    2)                sym 2 2 1
   4    (44    2    3)                sym 2 3 1
   5    (44    2    4)                sym 2 4 1
   6    (29          )                ldp
   7    (27    2    1)                lda 2 1
   8    (35   -1     )                call read
   9    (29          )                ldp
  10    (27    2    2)                lda 2 2
  11    (35   -1     )                call read
  12    (29          )                ldp
  13    (27    2    3)                lda 2 3
  14    (35   -1     )                call read
  15    (29          )                ldp
  16    (25    2    1)                lod 2 1
  17    (25    2    2)                lod 2 2
  18    (25    2    3)                lod 2 3
  19    (35   26     )                call arti
  20    (30    2    4)                str 2 4
  21    (29          )                ldp
  22    (25    2    4)                lod 2 4
  23    (35   60     )                call print
  24    (36          )                ret
  25    (42          )                end
  26    (41  105    2)     arti       proc 105 2 3
  27    (44    2    1)                sym 2 1 1
  28    (44    2    2)                sym 2 2 1
  29    (44    2    3)                sym 2 3 1
  30    (44    2    4)                sym 2 4 100
  31    (44    2  105)                sym 2 105 1
  32    (26    1     )                ldc 1
  33    (30    2  105)                str 2 105
  34    (40          )     $$1        nop
  35    (25    2    1)                lod 2 1
  36    (25    2    3)                lod 2 3
  37    (22          )                le
  38    (34   52     )                fjp $$2
  39    (27    2    4)                lda 2 4
  40    (25    2  105)                lod 2 105
  41    (12          )                add
  42    (25    2    1)                lod 2 1
  43    (31          )                sti
  44    (25    2  105)                lod 2 105
  45    ( 8          )                inc
  46    (30    2  105)                str 2 105
  47    (25    2    1)                lod 2 1
  48    (25    2    2)                lod 2 2
  49    (12          )                add
  50    (30    2    1)                str 2 1
  51    (32   34     )                ujp $$1
  52    (40          )     $$2        nop
  53    (27    2    4)                lda 2 4
  54    (25    2  105)                lod 2 105
  55    (12          )                add
  56    (26  101     )                ldc 101
  57    (31          )                sti
  58    (27    2    4)                lda 2 4
  59    (37          )                retv
  60    (41  101    2)     print      proc 101 2 3
  61    (44    2    1)                sym 2 1 1
  62    (44    2    2)                sym 2 2 1
  63    (26    1     )                ldc 1
  64    (30    2    2)                str 2 2
  65    (40          )     $$3        nop
  66    (25    2    1)                lod 2 1
  67    (25    2    2)                lod 2 2
  68    (12          )                add
  69    (28          )                ldi
  70    (26  101     )                ldc 101
  71    (24          )                ne
  72    (34   83     )                fjp $$4
  73    (29          )                ldp
  74    (25    2    1)                lod 2 1
  75    (25    2    2)                lod 2 2
  76    (12          )                add
  77    (28          )                ldi
  78    (35   -2     )                call write
  79    (25    2    2)                lod 2 2
  80    ( 8          )                inc
  81    (30    2    2)                str 2 2
  82    (32   65     )                ujp $$3
  83    (40          )     $$4        nop
  84    (36          )                ret
  85    (43    0     )                bgn 0
  86    (29          )                ldp
  87    (35    1     )                call main
  88    (42          )                end



   ****    Result    ****




   **********************




                 #### Statistics ####


    ****  Static Instruction Counts  ****


inc    =  2       add    =  5       le     =  1       ne     =  1       
lod    =  17      ldc    =  4       lda    =  6       ldi    =  2       
ldp    =  7       str    =  6       sti    =  2       ujp    =  2       
fjp    =  2       call   =  7       ret    =  2       retv   =  1       
nop    =  4       proc   =  3       end    =  2       bgn    =  1       
sym    =  11      


  ****  Dynamic instruction counts  ****


add    =  2         le     =  1         ne     =  1         lod    =  9         
ldc    =  4         lda    =  5         ldi    =  1         ldp    =  6         
str    =  3         sti    =  1         fjp    =  2         call   =  6         
ret    =  2         retv   =  1         nop    =  4         proc   =  3         
end    =  1         bgn    =  1         sym    =  11        

 Executable instruction count  =   47

 Total execution cycle         =   625
