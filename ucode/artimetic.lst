
 line       object           ucode  source program

   1    (35    3    2)     main       proc 3 2 2
   2    (38    2    1)                sym 2 1 1
   3    (38    2    2)                sym 2 2 1
   4    (38    2    3)                sym 2 3 1
   5    (38    2    4)                sym 2 4 100
   6    (23          )                ldp
   7    (21    2    1)                lda 2 1
   8    (29   -1     )                call read
   9    (23          )                ldp
  10    (21    2    2)                lda 2 2
  11    (29   -1     )                call read
  12    (23          )                ldp
  13    (21    2    3)                lda 2 3
  14    (29   -1     )                call read
  15    (23          )                ldp
  16    (19    2    1)                lod 2 1
  17    (19    2    2)                lod 2 2
  18    (19    2    3)                lod 2 3
  19    (29   32     )                call arti
  20    (24    2    4)                str 2 4
  21    (23          )                ldp
  22    (21    2    4)                lda 2 4
  23    (20    1     )                ldc 1
  24    ( 6          )                add
  25    (22          )                ldi
  26    (29   -2     )                call write 
  27    (23          )                ldp
  28    (21    2    4)                lda 2 4
  29    (29   66     )                call print
  30    (30          )                ret
  31    (36          )                end
  32    (35  104    2)     arti       proc 104 2 3
  33    (38    2    1)                sym 2 1 1
  34    (38    2    2)                sym 2 2 1
  35    (38    2    3)                sym 2 3 1
  36    (38    2    4)                sym 2 4 100
  37    (38    2  104)                sym 2 104 1
  38    (20    1     )                ldc 1
  39    (24    2  104)                str 2 104
  40    (34          )     $$1        nop
  41    (19    2    1)                lod 2 1
  42    (19    2    3)                lod 2 3
  43    (16          )                le
  44    (28   58     )                fjp $$2
  45    (21    2    4)                lda 2 4
  46    (19    2  104)                lod 2 104
  47    ( 6          )                add
  48    (19    2    1)                lod 2 1
  49    (25          )                sti
  50    (19    2  104)                lod 2 104
  51    ( 2          )                inc
  52    (24    2  104)                str 2 104
  53    (19    2    1)                lod 2 1
  54    (19    2    2)                lod 2 2
  55    ( 6          )                add
  56    (24    2    1)                str 2 1
  57    (26   40     )                ujp $$1
  58    (34          )     $$2        nop
  59    (19    2  104)                lod 2 104
  60    (21    2    4)                lda 2 4
  61    ( 6          )                add
  62    (20  101     )                ldc 101
  63    (25          )                sti
  64    (21    2    4)                lda 2 4
  65    (31          )                retv
  66    (35  101    2)     print      proc 101 2 3
  67    (38    2    1)                sym 2 1 100
  68    (38    2  101)                sym 2 101 1
  69    (20    1     )                ldc 1
  70    (24    2  101)                str 2 101
  71    (34          )     $$3        nop
  72    (21    2    1)                lda 2 1
  73    (19    2  101)                lod 2 101
  74    ( 6          )                add
  75    (22          )                ldi
  76    (20  101     )                ldc 101
  77    (18          )                ne
  78    (28   89     )                fjp $$4
  79    (23          )                ldp
  80    (21    2    1)                lda 2 1
  81    (19    2  101)                lod 2 101
  82    ( 6          )                add
  83    (22          )                ldi
  84    (29   -2     )                call write
  85    (19    2  101)                lod 2 101
  86    ( 2          )                inc
  87    (24    2  101)                str 2 101
  88    (26   71     )                ujp $$3
  89    (34          )     $$4        nop
  90    (30          )                ret
  91    (37    0     )                bgn 0
  92    (23          )                ldp
  93    (29    1     )                call main
  94    (36          )                end



   ****    Result    ****


 8 1 5 0 1 3 5

   **********************




                 #### Statistics ####


    ****  Static Instruction Counts  ****


inc    =  2       add    =  6       le     =  1       ne     =  1       
lod    =  14      ldc    =  5       lda    =  10      ldi    =  3       
ldp    =  8       str    =  6       sti    =  2       ujp    =  2       
fjp    =  2       call   =  8       ret    =  2       retv   =  1       
nop    =  4       proc   =  3       end    =  2       bgn    =  1       
sym    =  11      


  ****  Dynamic instruction counts  ****


inc    =  9         add    =  21        le     =  4         ne     =  7         
lod    =  46        ldc    =  11        lda    =  23        ldi    =  14        
ldp    =  13        str    =  15        sti    =  4         ujp    =  9         
fjp    =  11        call   =  13        ret    =  2         retv   =  1         
nop    =  13        proc   =  3         end    =  1         bgn    =  1         
sym    =  11        

 Executable instruction count  =   206

 Total execution cycle         =   1994
